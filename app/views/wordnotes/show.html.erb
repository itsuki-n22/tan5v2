<% @title = @wordnote.name + "-" + @wordnote.subject %>
<%= render partial: "tango_configs/config_window" %>
<div id="hint-window" class="modal">
  <div class="modal__bg modal-close"></div>
  <div class="modal__content">
    <div>ヒント</div>
    <p> <span id="hint-text"></span></p>
    <div><span class="btn btn-info modal-close">閉じる</span></div>
  </div>
</div>
<div id="tango-data" style="margin: 0 auto; width:100%;">
  <ul class="list-group list-group-horizontal text-center">
    <li class="list-group-item flex-fill">
    <button id="config-no-<%= @wordnote.id %>">⚙</button>
      <%= render partial: "tango_configs/hidden_tags", locals: {wordnote: @wordnote} %>
    </li>
    <li class="list-group-item flex-fill" id="auto-btn">▶</li>
    <li class="list-group-item flex-fill" id="trial-count">0</li>
    <li class="list-group-item flex-fill" id="correct-ratio">0</li>
    <li class="list-group-item flex-fill icon" id="star-1" >☆</li>
    <li class="list-group-item flex-fill icon" id="star-2" >☆</li>
    <li class="list-group-item flex-fill icon" id="star-3" >☆</li>
    <li class="list-group-item flex-fill icon" id="star-4" >☆</li>
    <li class="list-group-item flex-fill icon" id="star-5" >☆</li>
  </ul>
</div>
<div id="learn-wrapper" class="row">
  <div id="question" class="col-lg-6 col-12"><span id="question-text"></span></div>
  <div id="answer" class="col-lg-6 col-12"><span id="answer-text"></span></div>

</div>
<div id="learn-operation" style="margin: 0 auto; width:100%;">
  <ul class="list-group list-group-horizontal text-center">
    <li class="list-group-item flex-fill icon" id="correct-btn">○</li>
    <li class="list-group-item flex-fill icon" id="hint-btn" >hint</li>
    <li class="list-group-item flex-fill icon hidden" id="wrong-btn" >✕</li>
  </ul>
  <ul class="list-group list-group-horizontal text-center">
    <li class="list-group-item flex-fill to-10">&lt;&lt;</li>
    <li class="list-group-item flex-fill to-1" >&lt;</li>
    <li class="list-group-item flex-fill"><h2 id="tango-number">1</h2></li>
    <li class="list-group-item flex-fill to+1">&gt;</li>
    <li class="list-group-item flex-fill to+10">&gt;&gt;</li>
  </ul>
</div>
<div id="show-tangos"> ▽ </div>
<div id="questions" class="hidden">
  <%= form_with model: @tangos, id: "delete-btn", method: :delete,url: user_wordnote_delete_checked_tangos_path(user_id: @current_user, wordnote_id: @wordnote) do |f| %>
    <%= f.submit "削除", class: "delete-btn btn-danger" %>
  <% end %>
  <table class="table">
    <tr>
      <th><input type="checkbox" class="delete-check-all">    </th>
      <th>id</th>
      <th>question</th>
      <th>answer</th>
      <th>hint</th>
      <th>updated_at</th>
    </tr>
    <% @tangos.each_with_index do |tango,index| %>
      <tr id="tango-no-<%= tango.id.to_s %>">
      <%= render partial: "tangos/tangoitem", locals: {tango: tango, index: index} %>
      </tr>
    <% end %>
      <tr id="create-new-tango">
      <%= render partial: "tangos/newtangoitem" %>
      </tr>
  </table>
</div>


<%= javascript_include_tag "learn" %>
<%= javascript_include_tag "sample" %>

<script>

 //utility functions
 jQuery.highlightStars = function(starNumber){
   for(let n = 1; n <= starNumber ; n++){
      $('#star-' + n.toString()).text('★')
   }
   for(let n = starNumber + 1; n <= 5 ; n++){
      $('#star-' + n.toString()).text('☆')
   }
 };

 jQuery(function(){ $.start_wordnote();});
 jQuery(function(){ $.config_modal();});
 //main functions
 jQuery.start_wordnote = function(){
   let fontSize = $('[name*="font_size-"]').val();$
   $('#learn-wrapper').css({'font-size': Number(fontSize)});$
   let interval = Number($('[name*="timer-"]').val());$
   let lastQuestion = Number( $('[id*="last_question"]').val() );
   let isContinue =  $('[id*="continue-"]').val() ;

   var tangoNumber = 0;
   
     var tangoArray = [];
     var tangoData = $('#questions').find('tr');
     for(let n = 1; n < tangoData.length ; n++){
       var ans = tangoData.eq(n).find('td').eq(3).text();
       var que = tangoData.eq(n).find('td').eq(2).text();
       var hint = tangoData.eq(n).find('td').eq(4).text();
       var tangoId = tangoData.eq(n).find('td').eq(1).text();
       tangoArray.push({answer: ans, question: que, hint: hint, tangoId: tangoId});
       if(lastQuestion > 0 && tangoId == lastQuestion && isContinue == "true"){tangoNumber = n - 1};
     };
     tangoArray.pop();
   var questionHtml = $('#question-text');
   var answerHtml = $('#answer-text');
   var hintHtml = $('#hint-text');
   var tangosHtml = $('#questions');
   var learnHtml = $('#learn-wrapper');
   var correctBtnHtml = $('#correct-btn');
   var wrongBtnHtml = $('#wrong-btn');
   var deleteBtnHtml = $('#delete-btn');
   var hintBtnHtml = $('#hint-btn');
   var showAllTangosHtml = $('#show-tangos');
   var operationHtml = $('#learn-operation');
   showAllTangos();
   setTango();
   operateStatus();


   function changeTangoStatus(){
       if(answerHtml.attr('class') == 'hidden'){
         showAnswer();
       } else if(answerHtml.attr('class') != 'hidden'){
         changeTangoNumber(1);
         setTango();
       };
   };

   function resetTangoArray(){
     tangoArray = [];
     tangoData = $('#questions').find('tr');
     for(let n = 1; n < tangoData.length ; n++){
       var ans = tangoData.eq(n).find('td').eq(3).text();
       var que = tangoData.eq(n).find('td').eq(2).text();
       var hint = tangoData.eq(n).find('td').eq(4).text();
       var tangoId = tangoData.eq(n).find('td').eq(1).text();
       tangoArray.push({answer: ans, question: que, hint: hint, tangoId: tangoId});
     };
     tangoArray.pop();
   };

   //// auto-btn ( timer )
   let questionInterval ;
   if(interval > 0 ){ runTimer(interval);}
   controlTimer();
   function runTimer(interval){
     $('#auto-btn').addClass('auto-on').text(`■ :${interval}`);
     questionInterval = setInterval(function(){
       changeTangoStatus();
     },interval * 1000);
   };
   function stopTimer(){
     clearInterval(questionInterval);
     $('#auto-btn').removeClass('auto-on').text(`▶ `);
   };
   function resetTimer(){
     if(questionInterval){
       stopTimer();
       runTimer(interval);
     }
   }
   function controlTimer(){
     $('#auto-btn').click(function(){
       if($(this).attr('class').match(/auto-on/)){
         stopTimer();
       }else{
         if(interval > 0 ){
         }else{
           interval = 3;
         };
         runTimer(interval);
       }
       
     });
     
   };



   function setTango(){
     resetTangoArray();
     getTangoData();
     $('#tango-number').text(tangoNumber);
     answerHtml.addClass('hidden'); 
     questionHtml.text(tangoArray[tangoNumber].question);
     answerHtml.html(tangoArray[tangoNumber].answer.replace(/\n/g,"<br>"));
     hintHtml.text(' ' + tangoArray[tangoNumber].hint);
     wrongBtnHtml.addClass('hidden');
     correctBtnHtml.addClass('hidden');
   }
   function showAnswer(){
     answerHtml.removeClass('hidden');
     wrongBtnHtml.removeClass('hidden');
     correctBtnHtml.removeClass('hidden');
   }
   
   
   function showAllTangos(){
     if( $('#current_user_id').val() == location.pathname.split("/")[2] ){ 
       showAllTangosHtml.click(function(){
         if(tangosHtml.attr('class').match(/hidden/)){
           tangosHtml.removeClass('hidden');
           showAllTangosHtml.text('△');
         } else {
           tangosHtml.addClass('hidden');
           showAllTangosHtml.text('▽');
         };
       });
     }
   };
   function operateStatus(){

     /// #btn => resetTangoArray
     $('#questions').on('click',"[class*='update-btn'] , [class*='create-btn'], [class*='delete-btn']",function(){
       resetTangoArray();
     });

     /// edit tango
     $(document).on('click',"[id*='tango-no-'] > td",function(){
       var attr = $(this).attr('class');
       var value = $(this).text();
       if (!attr){} else if (attr.length > 1){
         $(this).removeClass(attr);
         if (attr == "updated_at"){
         }else{
           $(this).siblings().last().find('[class*="updated-text"]').addClass("hidden");
           $(this).siblings().last().find('[class*="btn"]').removeClass("hidden");
           var textarea = jQuery(jQuery.parseHTML('<textarea style="width:100%;"></textarea>')).attr({
             class: "tango_" + attr,
             default: value
           }).val(value);
           $(this).html(textarea);
         };
       };
     });

     $("table").on('input',"[id*='tango-no-'] > td > textarea",function(){
       var value = $(this).val();
       var target = "#" + $(this).attr('class');
       $(this).parent().siblings().last().find(target).attr({value: value});
     });

     $("table").on('click',"[class*='update-cancel-btn']",function(){
       $(this).parent().siblings().children("textarea").each(function(){
         var value = $(this).attr('default');
         var attr = $(this).attr("class").split("_").pop();
         $(this).parent().addClass(attr).html(value);
       });
       
       $(this).parent().find('[class*="updated-text"]').removeClass("hidden");
       $(this).parent().find('[class*="btn"]').addClass("hidden");
     });

     // create new tango
     $("[id*='create-new-tango']").on('click',"[class*='new-btn']",function(){
       $(this).parent().siblings().find('textarea').removeClass("hidden")
       $(this).parent().siblings().find('[class*="btn"]').removeClass("hidden")
     });

     $("[id*='create-new-tango']").on('input','textarea',function(){
       var value = $(this).val();
       var target = '[name="' + $(this).attr('class') +'"]'
       $(this).parent().siblings().last().find(target).attr({value: value});
     });

     $("[id*='create-new-tango']").on('click',"[class*='create-cancel-btn']",function(){
       $(this).parent().siblings().find('textarea').addClass("hidden")
       $(this).siblings().find('[class*="btn"]').addClass("hidden")
       $(this).addClass("hidden")
     });

     /// save last question
     $(window).on('beforeunload', function() { 
       let lastQuestion = tangoArray[tangoNumber].tangoId;
       let params = {tango_config: {}};
       let wordnoteId = Number($('[id*="config-no-"]').attr("id").split("-").pop());
       params["tango_config"]["wordnote_id"] = wordnoteId;
       params["tango_config"]["last_question"] = lastQuestion;
        $.ajax({
            url: '/users/' + $('#current_user_id').val()  + '/change_tango_config',
            type: "post",
            data: params,
            dataType: "text",
            beforeSend: function(xhr){
              xhr.setRequestHeader('X-CSRF-Token',$('meta[name="csrf-token"]').attr('content'));
            },
            //error: function(XMLHttpRequest, textStatus, errorThrown){ console.log(textStatus);},

          
        });

        A
      });

     /// delete checked tangos
     $("table").on('change',"[id*='delete-check-']",function(){
       resetDeleteHiddenField();
     });

     $("[class*='delete-check-all']").on('change',function(){
       if ($(this).prop('checked')){
         $("[id*='delete-check-']").each(function(){
           $(this).prop('checked', true);
         });
       }else{
         $("[id*='delete-check-']").each(function(){
           $(this).prop('checked', false);
         });
       };
       resetDeleteHiddenField();
     });

     ////// star
     $("[id*='star-']").hover(function(){
       let starNumber = $(this).attr("id").split('-').pop();
       $.highlightStars(Number(starNumber));
     });
     $("[id*='star-']").click(function(){
       let starNumber = $(this).attr("id").split('-').pop();
       changeTangoData({star: starNumber});
     });



     ////// tango panel 
     learnHtml.click(function(){
       if(answerHtml.attr('class') == 'hidden'){
         changeTangoData({trial_num: true}
       )};
       changeTangoStatus();
       resetTimer();
     });
     wrongBtnHtml.click(function(){
       changeTangoData({wrong_num: true});
       changeTangoStatus();
       resetTimer();
     });

     /// modal
     /// modal hint
     hintBtnHtml.click(function(){
       $('#hint-window').fadeIn();
     });
     $('#hint-window .modal-close').on('click',function(){
       $('.modal').fadeOut();
     });

     ////
     $("[class*='to-1']").click(function(){
        changeTangoNumber(-1);
        setTango();
     });
     $("[class*='to-10']").click(function(){
        changeTangoNumber(-10);
        setTango();
     });
     $("[class*='to+1']").click(function(){
        changeTangoNumber(1);
        setTango();
     });
     $("[class*='to+10']").click(function(){
        changeTangoNumber(10);
        setTango();
     });
   };

   function resetDeleteHiddenField(){
       var tmp = ""
       $('input:checked').each(function(){
         if( $(this).attr("id") === undefined){ return true; };
         var value = $(this).attr("id").split("-").pop();
         var id = $(this).attr("id").split("-").pop();
         tmp += '<input type="hidden" name="tangos[]" value=' + value + '>';
         console.log(id);
       });
       $("[name*='tangos']").remove();
       tmp = jQuery(jQuery.parseHTML(tmp));
       deleteBtnHtml.append(tmp);
   };
   function changeTangoNumber(num){
         if(tangoNumber + num >= tangoData.length -2){
           tangoNumber = 0;
          }else if(tangoNumber + num < 0){
           tangoNumber = tangoData.length - 3;
          }else{
            tangoNumber += num;
          };
   };

   function getTangoData(){
     $.ajax({
       url: location.pathname + '/tangos/' + tangoArray[tangoNumber].tangoId + '/get_tango_data',
       type: "get",
       dataType: "script",
       beforeSend: function(xhr){
         xhr.setRequestHeader('X-CSRF-Token',$('meta[name="csrf-token"]').attr('content'));
       },

     });
   };
   function changeTangoData(tangoDataParams){
     $.ajax({
       url: location.pathname + '/tangos/' + tangoArray[tangoNumber].tangoId + '/change_tango_data',
       type: "post",
       data: tangoDataParams,
       dataType: "script",
       beforeSend: function(xhr){
         xhr.setRequestHeader('X-CSRF-Token',$('meta[name="csrf-token"]').attr('content'));
       },
       //success: function(data){ alert("succ");},
       //error: function(data){ alert("error");}

     });
   };
 };
</script>
